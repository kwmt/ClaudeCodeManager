name: CI

on:
  pull_request:
    types: [opened, synchronize]

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  CARGO_BUILD_JOBS: 2

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        node-version: [18, 20]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: package-lock.json
        registry-url: 'https://registry.npmjs.org'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: src-tauri
        cache-targets: true
        cache-on-failure: true
        shared-key: tauri-build-${{ matrix.os }}

    - name: Install Node.js dependencies
      run: |
        npm ci

    - name: Run TypeScript type check
      run: |
        npm run check

    - name: Run frontend tests
      run: |
        npm run test:coverage

    - name: Run Rust tests
      run: |
        npm run cargo:test

    - name: Run Rust linting
      run: |
        npm run cargo:clippy -- -- -D warnings

    - name: Check Rust formatting
      run: |
        cd src-tauri
        cargo fmt -- --check

    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
      uses: codecov/codecov-action@v3
      with:
        file: coverage/coverage-final.json
        flags: frontend
        name: frontend-coverage

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: src-tauri
        cache-targets: true
        cache-on-failure: true
        shared-key: tauri-build-${{ matrix.os }}

    - name: Install Node.js dependencies
      run: |
        npm ci

    - name: Build frontend
      run: |
        npm run build

    - name: Build Tauri app (Debug)
      env:
        CARGO_PROFILE_DEV_DEBUG: 1
        CARGO_PROFILE_DEV_SPLIT_DEBUGINFO: unpacked
      run: |
        npm run tauri build -- --debug

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tauri-app-${{ matrix.os }}
        path: |
          src-tauri/target/debug/bundle/
        retention-days: 30

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install Node.js dependencies
      run: |
        npm ci

    - name: Run npm audit
      run: |
        npm audit --audit-level=moderate

    - name: Run Rust security audit
      run: |
        cd src-tauri
        cargo install cargo-audit
        cargo audit

  release:
    name: Release Build
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/main'
    needs: [test, build, security]
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: src-tauri
        cache-targets: true
        cache-on-failure: true
        shared-key: tauri-build-${{ matrix.os }}

    - name: Install Node.js dependencies
      run: |
        npm ci

    - name: Build Tauri app (Release)
      env:
        CARGO_PROFILE_RELEASE_LTO: thin
        CARGO_PROFILE_RELEASE_CODEGEN_UNITS: 1
      run: |
        npm run tauri:build

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: claude-code-manager-${{ matrix.os }}-release
        path: |
          src-tauri/target/release/bundle/
        retention-days: 90